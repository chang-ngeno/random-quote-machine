{"version":3,"sources":["components/Quote.js","App.js","index.js"],"names":["Quote","id","className","aria-hidden","this","props","quote","author","React","Component","App","state","saying","text","permalink","refreshQuote","bind","onRefresh","e","preventDefault","fetch","then","res","json","data","setState","catch","console","log","twitterUrl","encodeURIComponent","onClick","type","href","target","rel","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAEqBA,G,6KAGjB,OACE,yBAAKC,GAAG,UACN,yBAAKC,UAAU,4BACb,yBAAKA,UAAU,aACb,yBAAKD,GAAG,QACN,uBAAGC,UAAU,0BAA0BC,cAAY,SACnD,0BAAMD,UAAU,IAAhB,IAAqBE,KAAKC,MAAMC,MAAMA,MAAtC,KACA,uBAAGJ,UAAU,0BAA0BC,cAAY,QAAnD,OAGJ,yBAAKD,UAAU,yBAAyBD,GAAG,UAA3C,YACaG,KAAKC,MAAMC,MAAMC,OAD9B,W,GAbyBC,IAAMC,YCGpBC,E,kDACnB,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACXC,OAAQ,CACNC,KAAM,GACNN,OAAQ,GACRD,MAAO,GACPQ,UAAW,KAGf,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBAXA,E,gEAcjBZ,KAAKW,iB,gCAEGG,GACRA,EAAEC,iBACFf,KAAKW,iB,qCAES,IAAD,OACbK,MAAM,oDACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACL,EAAKC,SAAS,CAAEb,OAAQY,OAEzBE,MAAMC,QAAQC,O,+BAET,IAAD,OACHC,EAAa,yCAA2CC,mBAAmB1B,KAAKO,MAAMC,OAAON,OAAS,MACtGwB,mBAAmB,YAAa1B,KAAKO,MAAMC,OAAOL,OAAO,KAC7D,OACE,yBAAKL,UAAU,YAAYD,GAAG,aAC5B,kBAAC,EAAD,CAAOK,MAAOF,KAAKO,MAAMC,SAEzB,yBAAKV,UAAU,gBACb,uBAAGD,GAAG,YAAY8B,QAAS,SAAAb,GAAC,OAAI,EAAKD,UAAUC,IAAIc,KAAK,eAAe9B,UAAU,6BAAjF,aACA,uBAAGD,GAAG,cAAcgC,KAAMJ,EAAY3B,UAAU,iBAAiBgC,OAAO,SAASC,IAAI,uBAAsB,uBAAGjC,UAAU,0BAAb,gB,GAtCpFM,IAAMC,WCAvC2B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.1135e3b6.chunk.js","sourcesContent":["import React from 'react';\n\nexport default class Quote extends React.Component {\n\n  render() {\n    return (\n      <div id='saying'>\n        <div className='card border border-white'>\n          <div className='card-body'>\n            <div id=\"text\" >\n              <i className=\"fa fa-quote-left faa-lg\" aria-hidden=\"true\"></i>\n              <span className=\"\"> {this.props.quote.quote} </span>\n              <i className=\"fa fa-quote-right fa-lg\" aria-hidden=\"true\"> </i>\n            </div>\n          </div>\n          <div className='card-footer text-right' id=\"author\" >\n             Author ~ {this.props.quote.author}.\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n","import React from 'react';\nimport './App.scss';\nimport Quote from './components/Quote'\n\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      saying: {\n        text: '',\n        author: '',\n        quote: '',\n        permalink: ''\n      },\n    };\n    this.refreshQuote = this.refreshQuote.bind(this);\n    this.onRefresh = this.onRefresh.bind(this);\n  }\n  componentDidMount() {\n    this.refreshQuote();\n  }\n  onRefresh(e) {\n    e.preventDefault();\n    this.refreshQuote();\n  }\n  refreshQuote() {\n    fetch('http://quotes.stormconsultancy.co.uk/random.json')\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ saying: data })\n      })\n      .catch(console.log)\n  }\n  render() {\n    let twitterUrl = 'https://twitter.com/intent/tweet?text=' + encodeURIComponent(this.state.saying.quote) + '%0A'\n      + encodeURIComponent('Author ~ ' +this.state.saying.author+'.') ;\n    return (\n      <div className=\"container\" id=\"quote-box\" >\n        <Quote quote={this.state.saying} />\n\n        <div className='button-group'>\n          <a id=\"new-quote\" onClick={e => this.onRefresh(e)} type='refreshQuote' className='btn btn-warning pull-left'>New Quote</a>\n          <a id=\"tweet-quote\" href={twitterUrl} className='btn pull-right' target='_blank' rel='noopener noreferrer'><i className='fa fa-twitter App-link'>Tweet</i></a>\n        </div>\n      </div>\n    );\n  };\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}